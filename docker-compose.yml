version: "3.8"

services:
  postgresdb:
    image: postgres
    container_name: delivery_service_db
    restart: unless-stopped
    env_file: ./.env
    environment:
      - POSTGRES_USER=$POSTGRES_USER
      - POSTGRES_PASSWORD=$POSTGRES_PASSWORD
      - POSTGRES_DB=$POSTGRES_DATABASE
    ports:
      - $POSTGRES_LOCAL_PORT:$POSTGRES_DOCKER_PORT
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 30s
      timeout: 30s
      retries: 3
    volumes:
      - ./data_processing_response:/app/data_processing_response

  application:
    depends_on:
      - postgresdb
    restart: on-failure
    image: delivery_service_app
    build: .
    env_file: ./.env
    ports:
      - $SPRING_LOCAL_PORT:$SPRING_DOCKER_PORT
    environment:
        SPRING_DATASOURCE_URL: jdbc:postgresql://postgresdb:$POSTGRES_DOCKER_PORT/$POSTGRES_DATABASE
        SPRING_DATASOURCE_USERNAME: $POSTGRES_USER
        SPRING_DATASOURCE_PASSWORD: $POSTGRES_PASSWORD
        SPRING_HIBERNATE_DIALECT: org.hibernate.dialect.PostgreSQLDialect
    volumes:
      - ./data_processing_response:/app/data_processing_response
